import numpy as np


def smooth(x,window_len=11,window='hanning'):
	

	print(x.size);
	print(window_len);
	if x.ndim != 1:
		raise (ValueError, "smooth only accepts 1 dimension arrays.")
	if x.size < window_len:
		raise (ValueError, "Input vector needs to be bigger than window size.")
	if window_len < 3:
		return x

	if not window in ['flat','hanning','hamming','barlett','blackman']:
		raise (ValueError, "Window is one of 'flat','hanning','hamming','barlett','blackman'")
	
	s = np.r_[x[window_len-1:0:-1],x,x[-1:-window_len:-1]]

	if window == 'flat': #moving average
		w = np.ones(window_len,'d')
	else:
		w = eval('np.' + window + '(window_len)')

	y = np.convolve(w/w.sum(),s,mode='valid')

	return y
